basePath: /
definitions:
  bookEntity.GoBook:
    properties:
      author:
        type: string
      callnumber:
        type: integer
      id:
        type: integer
      publisher:
        type: string
      title:
        maxLength: 20
        minLength: 2
        type: string
    required:
    - author
    - callnumber
    - id
    - publisher
    type: object
host: localhost:6060
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample Books server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Books Sample Go Application
  version: "2.0"
paths:
  /book:
    post:
      description: create a new book into gobooks.
      parameters:
      - description: bookEntity.GoBook data.
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/bookEntity.GoBook'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bookEntity.GoBook'
      summary: create book.
      tags:
      - root
    put:
      consumes:
      - '*/*'
      description: update the book into books list.
      parameters:
      - description: bookEntity.GoBook data.
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/bookEntity.GoBook'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bookEntity.GoBook'
      summary: update the book.
      tags:
      - root
  /book/{id}:
    delete:
      description: delete the book from gobooks.
      parameters:
      - description: bookEntity.GoBook ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: delete the book from gobooks.
      tags:
      - root
    get:
      description: read the book by id from gobooks.
      parameters:
      - description: bookEntity.GoBook ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bookEntity.GoBook'
      summary: get the book by ID.
      tags:
      - root
  /books:
    get:
      description: read the books list.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/bookEntity.GoBook'
            type: array
      summary: get the books list.
      tags:
      - root
schemes:
- http
swagger: "2.0"
